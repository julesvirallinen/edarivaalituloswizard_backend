{"version":3,"sources":["Components/ElectionData.js","Components/YearButtons.js","Components/ViewSingleCandidate.js","Components/TopCandidates.js","Components/FilterForm.js","App.js","index.js"],"names":["ViewCandidate","candidate","setCurrentCandidate","candidateName","name","replace","includes","split","nameParts","className","onClick","value","seats","InfoCard","votes","candidates","Badge","color","ViewGroup","group","filter","useState","isOpen","setIsOpen","candidateCount","children","length","style","marginTop","Card","CardHeader","Collapse","CardBody","map","toLowerCase","key","ViewCoalition","coalition","forEach","child","JSON","stringify","ElectionData","candidateData","undefined","MenuButtons","setCurrent","current","options","yearStyle","year","ViewSingleCandidate","currentCandidate","nicknames","Array","from","Set","years","nickname","Boolean","formatNicknames","item","index","totalVotes","times","elected","TopCandidates","sortedCandidateList","Object","values","sort","a","b","slice","FilterForm","setFilter","Form","Input","type","placeholder","onChange","event","target","marginBottom","App","yearlyData","setYearlyData","currentYear","setCurrentYear","setCandidateData","currentPage","setCurrentPage","useEffect","axios","get","then","response","data","menuOptions","keys","ReactDOM","render","document","getElementById"],"mappings":"sTAGMA,EAAgB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,oBAC9BC,EAAgBF,EAAUG,KAAKC,QAAQ,MAAO,IAE9CF,EAAcG,SAAS,OACdH,EAAcI,MAAM,KAAK,GAAGA,MAAM,KAAK,GAClDJ,EAAgBA,EAAcI,MAAM,KAAK,IAE3C,IAAMC,EAAYL,EAAcI,MAAM,KAGtC,OAFAJ,EAAa,UAAMK,EAAU,GAAhB,YAAsBA,EAAU,IAG3C,6BACE,0BAAMC,UAAU,YAAYC,QAAS,kBAAMR,EAAoBC,KAC5DA,EADH,MACqBF,EAAUU,MAD/B,IACuCV,EAAUW,MAAQ,WAAQ,MAMjEC,EAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACzB,OACE,yBAAKN,UAAU,WACb,oDACI,kBAACO,EAAA,EAAD,CAAOC,MAAM,WAAWH,GACzBC,EAAa,8CAAS,kBAACC,EAAA,EAAD,CAAOC,MAAM,WAAWF,IAA6B,MAM9EG,EAAY,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOjB,EAAkC,EAAlCA,oBAAqBkB,EAAa,EAAbA,OAAa,EAChCC,oBAAS,GADuB,mBACrDC,EADqD,KAC7CC,EAD6C,KAetDC,EAAiBL,EAAMM,SAASC,OAEtC,OACE,yBAAKC,MAdU,CACfC,UAAW,QAcT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYpB,QAAS,kBAlBNa,GAAWD,KAmBxB,2BACGH,EAAMf,KADT,IACe,kBAACY,EAAA,EAAD,CAAOC,MAAM,UAAUE,EAAMP,QAE5C,kBAAC,EAAD,CAAUE,MAAOK,EAAMR,MAAOI,WAAYS,KAE5C,kBAACO,EAAA,EAAD,CAAUT,OAAQA,GAChB,kBAACU,EAAA,EAAD,KACGb,EAAMM,SAASQ,KAAI,SAAAhC,GAAS,OAC3BA,EAAUG,KAAK8B,cAAc5B,SAASc,GACpC,kBAAC,EAAD,CACEnB,UAAWA,EACXkC,IAAKlC,EAAUG,KACfF,oBAAqBA,IAGvB,WAUVkC,EAAgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,UAAWnC,EAAkC,EAAlCA,oBAAqBkB,EAAa,EAAbA,OAAa,EACxCC,oBAAS,GAD+B,mBAC7DC,EAD6D,KACrDC,EADqD,KAKhEC,EAAiB,EACrBa,EAAUZ,SAASa,SAAQ,SAAAC,GAAK,OAAKf,GAAgBe,EAAMd,SAASC,UAYpE,OACE,yBAAKC,MAXU,CACfC,UAAW,SAWT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYpB,QAAS,kBAlBNa,GAAWD,KAmBxB,2BACGe,EAAUjC,KADb,IACmB,kBAACY,EAAA,EAAD,CAAOC,MAAM,WAAWoB,EAAUzB,QAErD,kBAAC,EAAD,CAAUE,MAAOuB,EAAU1B,MAAOI,WAAYS,KAEhD,kBAACO,EAAA,EAAD,CAAUT,OAAQA,GAChB,kBAACU,EAAA,EAAD,KACGK,EAAUZ,SAASQ,KAAI,SAAAd,GAAK,OAC3BqB,KAAKC,UAAUtB,GACZe,cACA5B,SAASc,GACV,kBAAC,EAAD,CACED,MAAOA,EACPgB,IAAKhB,EAAMf,KACXF,oBAAqBA,EACrBkB,OAAQD,EAAMf,KAAK8B,cAAc5B,SAASc,GAAU,GAAKA,IAG3D,WAiCDsB,EAvBM,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,cAAezC,EAAkC,EAAlCA,oBAAqBkB,EAAa,EAAbA,OAC1D,YAAsBwB,IAAlBD,EAAoC,GAGtC,oCACGA,EAAclB,SAASQ,KAAI,SAAAI,GAAS,OACnCG,KAAKC,UAAUJ,GACZH,cACA5B,SAASc,GACV,kBAAC,EAAD,CACEiB,UAAWA,EACXF,IAAKE,EAAUjC,KACfF,oBAAqBA,EACrBkB,OAAQiB,EAAUjC,KAAK8B,cAAc5B,SAASc,GAAU,GAAKA,IAG/D,QC1HKyB,EArBK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACpCC,EAAY,CAChBhC,MAAO,QAGT,OACE,4BACG+B,EAAQf,KAAI,SAAAiB,GAAI,OACf,0BACEvB,MAAOoB,GAAWG,EAAOD,OAAYL,EACrCT,IAAKe,EACLxC,QAAS,kBAAMoC,EAAWI,KAEzB,IACAA,QCQIC,EAtBa,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,iBAAkBnD,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,oBAC1D,QAAkB0C,IAAd3C,EAAyB,MAAO,GACpC,IAAMoD,EAAYC,MAAMC,KAAK,IAAIC,IAAIvD,EAAUwD,MAAMxB,KAAI,SAAAiB,GAAI,OAAIA,EAAKQ,cAAYtC,OAAOuC,SACnFC,EAAkBP,EAAUpB,KAAI,SAAC4B,EAAMC,GAAP,OAAkBA,EAAQ,KAAO,IAAMD,KAC7E,OACE,6BACE,4BAAKT,GACe,IAAnBC,EAAU3B,OAAa,gCAAMkC,EAAN,KAA+B,GAFzD,gBAGgB3D,EAAU8D,WAH1B,IAGsC,6BAHtC,0BAI0B9D,EAAU+D,MACjC/D,EAAUwD,MAAMxB,KAAI,SAAAiB,GAAI,OACvB,yBAAKf,IAAKe,EAAKA,MACb,2BAAIA,EAAKA,KAAT,KADF,UAEUA,EAAKpC,MAFf,IAEuBoC,EAAKe,QAAU,WAAQ,GAF9C,KAEoDf,EAAKb,UAFzD,IAEqEa,EAAK/B,MAF1E,IAGE,iCAGJ,4BAAQT,QAAS,kBAAMR,EAAoB,MAA3C,aCQWgE,EAzBK,SAAC,GAAoD,IAAlDvB,EAAiD,EAAjDA,cAAezC,EAAkC,EAAlCA,oBAAqBkB,EAAa,EAAbA,OAKzD,IAAM+C,EAJgBC,OAAOC,OAAO1B,GAIM2B,MAH1C,SAAiBC,EAAGC,GAClB,OAAOA,EAAET,WAAaQ,EAAER,cAE8BU,MAAM,EAAG,KAEjE,OACE,6BACGN,EAAoBlC,KAAI,SAAChC,EAAW6D,GAAZ,OACrBtB,KAAKC,UAAUxC,GAAWiC,cAAc5B,SAASc,GACnD,0BACEX,UAAU,YACV0B,IAAKlC,EAAUG,KACfM,QAAS,kBAAMR,EAAoBD,EAAUG,QAE5C0D,EAAQ,EALX,KAKgB7D,EAAUG,KAL1B,IAKgC,2BAAIH,EAAU8D,YAAgB,IAC5D,2BAAI9D,EAAU+D,MAAd,KACA,8BACO,Q,gBCIJU,EAtBI,SAAC,GAA2B,IAAzBtD,EAAwB,EAAxBA,OAAQuD,EAAgB,EAAhBA,UAS5B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,wBACZpE,MAAOS,EACP4D,SAdmB,SAAAC,GACvBN,EAAUM,EAAMC,OAAOvE,MAAMuB,gBAczBP,MAXa,CACjBwD,aAAc,YC4EHC,MA7Ef,WAAgB,IAAD,EACuB/D,mBAAS,IADhC,mBACNgE,EADM,KACMC,EADN,OAEyBjE,mBAAS,MAFlC,mBAENkE,EAFM,KAEOC,EAFP,OAG6BnE,mBAAS,IAHtC,mBAGNsB,EAHM,KAGS8C,EAHT,OAImCpE,mBAAS,IAJ5C,mBAIN+B,EAJM,KAIYlD,EAJZ,OAKyBmB,mBAAS,UALlC,mBAKNqE,EALM,KAKOC,EALP,OAMetE,mBAAS,IANxB,mBAMND,EANM,KAMEuD,EANF,KAQbiB,qBAAU,WACRC,IAAMC,IAAI,oCAAoCC,MAAK,SAAAC,GACjDV,EAAcU,EAASC,WAExB,IAEHL,qBAAU,WACRC,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GACpDP,EAAiBO,EAASC,WAE3B,IAEH,IAAMC,EAAc,CAAC,SAAU,kBAE/B,MAAyB,KAArB9C,EAEA,6BACE,kBAAC,EAAD,CACEA,iBAAkBA,EAClBnD,UAAW0C,EAAcS,GACzBlD,oBAAqBA,KAKT,WAAhBwF,EAEA,6BACE,kBAAC,EAAD,CACE5C,WAAY6C,EACZ5C,QAAS2C,EACT1C,QAASkD,IAEX,kBAAC,EAAD,CACEpD,WAAY0C,EACZzC,QAASwC,EACTvC,QAASoB,OAAO+B,KAAKd,KAEvB,kBAAC,EAAD,CAAYjE,OAAQA,EAAQuD,UAAWA,IAEvC,kBAAC,EAAD,CACEhC,cAAe0C,EAAWE,GAC1BrF,oBAAqBA,EACrBkB,OAAQA,KAMI,mBAAhBsE,EAEA,6BACE,kBAAC,EAAD,CACE5C,WAAY6C,EACZ5C,QAAS2C,EACT1C,QAASkD,IAEX,kBAAC,EAAD,CAAY9E,OAAQA,EAAQuD,UAAWA,IAEvC,kBAAC,EAAD,CACEhC,cAAeA,EACfzC,oBAAqBA,EACrBkB,OAAQA,UAbhB,GC3DFgF,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2c88e86a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Collapse, Badge, CardBody, Card, CardHeader } from 'reactstrap'\n\nconst ViewCandidate = ({ candidate, setCurrentCandidate }) => {\n  var candidateName = candidate.name.replace(/\\s/g, '')\n  var nickname = ''\n  if (candidateName.includes(\"'\")) {\n    nickname = candidateName.split(\"'\")[1].split(\"'\")[0]\n    candidateName = candidateName.split(\"'\")[0]\n  }\n  const nameParts = candidateName.split(',')\n  candidateName = `${nameParts[1]} ${nameParts[0]}`\n\n  return (\n    <div>\n      <span className=\"candidate\" onClick={() => setCurrentCandidate(candidateName)}>\n        {candidateName} / {candidate.value} {candidate.seats ? '/ ‚òÖ' : ''}\n      </span>\n    </div>\n  )\n}\n\nconst InfoCard = ({ votes, candidates }) => {\n  return (\n    <div className=\"statBox\">\n      <span>\n      üó≥Ô∏è:<Badge color=\"default\">{votes}</Badge> \n        {candidates ? <span>üë§:<Badge color=\"default\">{candidates}</Badge></span> : ''}\n      </span>\n    </div>\n  )\n}\n\nconst ViewGroup = ({ group, setCurrentCandidate, filter }) => {\n  const [isOpen, setIsOpen] = useState(true)\n  const toggle = () => setIsOpen(!isOpen)\n\n  const divStyle = {\n    marginTop: '5px',\n    // padding: '5px'\n  }\n\n  const cardStyle = {\n    display: 'inline-block',\n    padding: '5px',\n    marginLeft: '20px',\n  }\n\n  const candidateCount = group.children.length\n\n  return (\n    <div style={divStyle}>\n      <Card>\n        <CardHeader onClick={() => toggle()}>\n          <b>\n            {group.name} <Badge color=\"danger\">{group.seats}</Badge>\n          </b>\n          <InfoCard votes={group.value} candidates={candidateCount}/>\n        </CardHeader>\n        <Collapse isOpen={isOpen}>\n          <CardBody>\n            {group.children.map(candidate =>\n              candidate.name.toLowerCase().includes(filter) ? (\n                <ViewCandidate\n                  candidate={candidate}\n                  key={candidate.name}\n                  setCurrentCandidate={setCurrentCandidate}\n                />\n              ) : (\n                ''\n              ),\n            )}\n          </CardBody>\n        </Collapse>\n      </Card>\n    </div>\n  )\n}\n\nconst ViewCoalition = ({ coalition, setCurrentCandidate, filter }) => {\n  const [isOpen, setIsOpen] = useState(true)\n\n  const toggle = () => setIsOpen(!isOpen)\n\n  var candidateCount = 0\n  coalition.children.forEach(child => (candidateCount+=child.children.length))\n\n  const divStyle = {\n    marginTop: '10px',\n  }\n\n  const cardStyle = {\n    display: 'inline-block',\n    padding: '5px',\n    marginLeft: '20px',\n  }\n\n  return (\n    <div style={divStyle}>\n      <Card>\n        <CardHeader onClick={() => toggle()}>\n          <b>\n            {coalition.name} <Badge color=\"warning\">{coalition.seats}</Badge>\n          </b>\n          <InfoCard votes={coalition.value} candidates={candidateCount}/>\n        </CardHeader>\n        <Collapse isOpen={isOpen}>\n          <CardBody>\n            {coalition.children.map(group =>\n              JSON.stringify(group)\n                .toLowerCase()\n                .includes(filter) ? (\n                <ViewGroup\n                  group={group}\n                  key={group.name}\n                  setCurrentCandidate={setCurrentCandidate}\n                  filter={group.name.toLowerCase().includes(filter) ? '' : filter}\n                />\n              ) : (\n                ''\n              ),\n            )}\n          </CardBody>\n        </Collapse>\n      </Card>\n    </div>\n  )\n}\n\nconst ElectionData = ({ candidateData, setCurrentCandidate, filter }) => {\n  if (candidateData === undefined) return ''\n\n  return (\n    <>\n      {candidateData.children.map(coalition =>\n        JSON.stringify(coalition)\n          .toLowerCase()\n          .includes(filter) ? (\n          <ViewCoalition\n            coalition={coalition}\n            key={coalition.name}\n            setCurrentCandidate={setCurrentCandidate}\n            filter={coalition.name.toLowerCase().includes(filter) ? '' : filter}\n          />\n        ) : (\n          ''\n        ),\n      )}\n    </>\n  )\n}\n\nexport default ElectionData\n","import React from 'react'\n\nconst MenuButtons = ({ setCurrent, current, options }) => {\n  const yearStyle = {\n    color: 'gray',\n  }\n\n  return (\n    <h1>\n      {options.map(year => (\n        <span\n          style={current != year ? yearStyle : undefined}\n          key={year}\n          onClick={() => setCurrent(year)}\n        >\n          {' '}\n          {year}\n        </span>\n      ))}\n    </h1>\n  )\n}\n\nexport default MenuButtons\n","import React from 'react'\n\nconst ViewSingleCandidate = ({ currentCandidate, candidate, setCurrentCandidate }) => {\n  if (candidate === undefined) return ''\n  const nicknames = Array.from(new Set(candidate.years.map(year => year.nickname))).filter(Boolean)\n  const formatNicknames = nicknames.map((item, index) => (index ? ', ' : '') + item)\n  return (\n    <div>\n      <h1>{currentCandidate}</h1>\n      {nicknames.length!==0 ? <h2>({formatNicknames})</h2> : ''}\n      Total votes: {candidate.totalVotes} <br />\n      Times up for election: {candidate.times}\n      {candidate.years.map(year => (\n        <div key={year.year}>\n          <b>{year.year} </b>\n          votes: {year.votes} {year.elected ? '/ ‚òÖ' : ''} ({year.coalition}/{year.group})\n          <br />\n        </div>\n      ))}\n      <button onClick={() => setCurrentCandidate('')}>Return </button>\n    </div>\n  )\n}\n\nexport default ViewSingleCandidate\n","import React from 'react'\n\nconst TopCandidates = ({ candidateData, setCurrentCandidate, filter }) => {\n    const candidateList = Object.values(candidateData)\n    function compare(a, b) {\n      return b.totalVotes - a.totalVotes\n    }\n    const sortedCandidateList = candidateList.sort(compare).slice(0, 300)\n  \n    return (\n      <div>\n        {sortedCandidateList.map((candidate, index) => (\n            JSON.stringify(candidate).toLowerCase().includes(filter) ? \n          <span\n            className=\"candidate\"\n            key={candidate.name}\n            onClick={() => setCurrentCandidate(candidate.name)}\n          >\n            {index + 1}. {candidate.name} <b>{candidate.totalVotes}</b>{' '}\n            <i>{candidate.times}x</i>\n            <br />\n          </span> :''\n        ))}\n      </div>\n    )\n  }\n\n  export default TopCandidates","import React from 'react'\nimport { Form, Input } from 'reactstrap'\n\nconst FilterForm = ({ filter, setFilter }) => {\n  const handleDataChange = event => {\n    setFilter(event.target.value.toLowerCase())\n  }\n\n  const InputField = {\n    marginBottom: '10px',\n  }\n\n  return (\n    <Form>\n      <Input\n        type=\"text\"\n        placeholder=\"Try 'HYAL' or 'Laura'\"\n        value={filter}\n        onChange={handleDataChange}\n        style={InputField}\n      />\n    </Form>\n  )\n}\n\nexport default FilterForm\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport ElectionData from './Components/ElectionData'\nimport MenuButtons from './Components/YearButtons'\nimport ViewSingleCandidate from './Components/ViewSingleCandidate'\nimport TopCandidates from './Components/TopCandidates'\nimport FilterForm from './Components/FilterForm'\n\nfunction App() {\n  const [yearlyData, setYearlyData] = useState({})\n  const [currentYear, setCurrentYear] = useState(2018)\n  const [candidateData, setCandidateData] = useState({})\n  const [currentCandidate, setCurrentCandidate] = useState('')\n  const [currentPage, setCurrentPage] = useState('yearly')\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/sample').then(response => {\n      setYearlyData(response.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/candidate').then(response => {\n      setCandidateData(response.data)\n    })\n  }, [])\n\n  const menuOptions = ['yearly', 'top candidates']\n\n  if (currentCandidate !== '') {\n    return (\n      <div>\n        <ViewSingleCandidate\n          currentCandidate={currentCandidate}\n          candidate={candidateData[currentCandidate]}\n          setCurrentCandidate={setCurrentCandidate}\n        />\n      </div>\n    )\n  }\n  if (currentPage === 'yearly') {\n    return (\n      <div>\n        <MenuButtons\n          setCurrent={setCurrentPage}\n          current={currentPage}\n          options={menuOptions}\n        />\n        <MenuButtons\n          setCurrent={setCurrentYear}\n          current={currentYear}\n          options={Object.keys(yearlyData)}\n        />\n        <FilterForm filter={filter} setFilter={setFilter} />\n\n        <ElectionData\n          candidateData={yearlyData[currentYear]}\n          setCurrentCandidate={setCurrentCandidate}\n          filter={filter}\n        />\n      </div>\n    )\n  }\n\n  if (currentPage === 'top candidates') {\n    return (\n      <div>\n        <MenuButtons\n          setCurrent={setCurrentPage}\n          current={currentPage}\n          options={menuOptions}\n        />\n        <FilterForm filter={filter} setFilter={setFilter} />\n\n        <TopCandidates\n          candidateData={candidateData}\n          setCurrentCandidate={setCurrentCandidate}\n          filter={filter}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}